[[[SSA for [4960/5529].$5011]]]
signatures:
	sig0: i64i64i32_v
	sig1: i64i64i32_i32
	sig2: i64i64i32i32_v
	sig3: i64i64i32i32_i32
	sig4: i64i64i32i32i32_i32
	sig6: i64i64i32i32i32_v
	sig8: i64i64i32i32i32i32i32_i32

blk0: (exec_ctx:i64, module_ctx:i64, v2:i32, v3:i32)
	v4:i32 = Iconst_32 0x0
	v5:i32 = Iconst_32 0x0
	v6:i32 = Iconst_32 0x0
	v7:i32 = Iconst_32 0x0
	v8:i32 = Iconst_32 0x0
	v9:i32 = Iconst_32 0x0
	v10:i32 = Iconst_32 0x0
	v11:i32 = Iconst_32 0x0
	v12:i32 = Iconst_32 0x0
	v13:i32 = Iconst_32 0x0
	v14:i32 = Iconst_32 0x0
	v15:i32 = Iconst_32 0x0
	v16:i32 = Iconst_32 0x0
	v17:i32 = Load module_ctx, 0x4e0
	v18:i32 = Iconst_32 0xffffffc0
	v19:i32 = Iadd v17, v18
	Store v19, module_ctx, 0x4e0
	v20:i64 = Iconst_64 0x4
	v21:i64 = UExtend v2, 32->64
	v22:i64 = Uload32 module_ctx, 0x10
	v23:i64 = Iadd v21, v20
	v24:i32 = Icmp lt_u, v22, v23
	ExitIfTrue v24, exec_ctx, memory_out_of_bounds
	v25:i64 = Load module_ctx, 0x8
	v26:i64 = Iadd v25, v21
	v27:i32 = Load v26, 0x0
	v28:i32 = Iconst_32 0x1
	v29:i32 = Icmp neq, v27, v28
	Brnz v29, blk2, v19
	Jump blk3

blk1: () <-- (blk21,blk25,blk53)
	Exit exec_ctx, unreachable

blk2: (v1495:i32) <-- (blk0,blk9,blk61,blk68,blk71,blk65,blk72,blk74,blk75,blk107,blk5)
	v1496:i32 = Iconst_32 0xffffffc0
	v1497:i32 = Isub v1495, v1496
	Store v1497, module_ctx, 0x4e0
	Return

blk3: () <-- (blk0)
	v30:i32 = Iconst_32 0x14
	v31:i32 = Iadd v2, v30
	Jump blk4, v2, v19, v31, v3

blk4: (v32:i32,v332:i32,v374:i32,v1459:i32) <-- (blk3,blk62)
	v33:i64 = Iconst_64 0x2c
	v34:i64 = UExtend v32, 32->64
	v35:i64 = Uload32 module_ctx, 0x10
	v36:i64 = Iadd v34, v33
	v37:i32 = Icmp lt_u, v35, v36
	ExitIfTrue v37, exec_ctx, memory_out_of_bounds
	v38:i64 = Load module_ctx, 0x8
	v39:i64 = Iadd v38, v34
	v40:i32 = Load v39, 0x28
	Brz v40, blk7
	Jump blk6

blk5: () <-- (blk40)
	Jump blk2, v1477

blk6: () <-- (blk4)
	Jump blk8, v40, v32, v374, v1459, v332

blk7: () <-- (blk4)
	v42:i64 = Iconst_64 0x28
	v43:i64 = UExtend v32, 32->64
	v44:i64 = Iadd v43, v42
	v45:i32 = Icmp lt_u, v35, v44
	ExitIfTrue v45, exec_ctx, memory_out_of_bounds
	v46:i64 = Iadd v38, v43
	v47:i32 = Load v46, 0x24
	v48:i32 = Load v46, 0x4
	v49:i64 = Iconst_64 0x14
	v50:i64 = UExtend v48, 32->64
	v51:i64 = Iadd v50, v49
	v52:i32 = Icmp lt_u, v35, v51
	ExitIfTrue v52, exec_ctx, memory_out_of_bounds
	v53:i64 = Iadd v38, v50
	v54:i32 = Load v53, 0x10
	v55:i32 = Load v53, 0xc
	v56:i32 = Isub v54, v55
	v57:i32 = Iconst_32 0x1c
	v58:i32 = Sdiv v56, v57
	v59:i32 = Icmp ge_u, v47, v58
	Brz v59, blk10
	Jump blk9

blk8: (v41:i32,v412:i32,v1438:i32,v1458:i32,v1475:i32) <-- (blk6,blk18)
	v394:i64 = Iconst_64 0x4
	v395:i64 = UExtend v41, 32->64
	v396:i64 = Uload32 module_ctx, 0x10
	v397:i64 = Iadd v395, v394
	v398:i32 = Icmp lt_u, v396, v397
	ExitIfTrue v398, exec_ctx, memory_out_of_bounds
	v399:i64 = Load module_ctx, 0x8
	v400:i64 = Iadd v399, v395
	v401:i32 = Load v400, 0x0
	v402:i64 = Iconst_64 0x64
	v403:i64 = UExtend v401, 32->64
	v404:i64 = Iadd v403, v402
	v405:i32 = Icmp lt_u, v396, v404
	ExitIfTrue v405, exec_ctx, memory_out_of_bounds
	v406:i64 = Iadd v399, v403
	v407:i32 = Load v406, 0x60
	v408:i32 = Load v406, 0x54
	v409:i32 = Load v406, 0x58
	v410:i32 = Icmp eq, v408, v409
	Brz v410, blk32
	Jump blk31

blk9: () <-- (blk7)
	v60:i32 = Iconst_32 0x2
	Store v60, v46, 0x0
	Jump blk2, v332

blk10: () <-- (blk7)
	Jump blk11

blk11: () <-- (blk10)
	v61:i32 = Iconst_32 0x1c
	v62:i32 = Imul v47, v61
	v63:i32 = Iadd v55, v62
	v64:i64 = Iconst_64 0x2c
	v65:i64 = UExtend v32, 32->64
	v66:i64 = Iadd v65, v64
	v67:i32 = Icmp lt_u, v35, v66
	ExitIfTrue v67, exec_ctx, memory_out_of_bounds
	v68:i64 = Iadd v38, v65
	Store v63, v68, 0x28
	v69:i64 = Iconst_64 0x4
	v70:i64 = UExtend v63, 32->64
	v71:i64 = Iadd v70, v69
	v72:i32 = Icmp lt_u, v35, v71
	ExitIfTrue v72, exec_ctx, memory_out_of_bounds
	v73:i64 = Iadd v38, v70
	v74:i32 = Load v73, 0x0
	v75:i64 = Iconst_64 0x58
	v76:i64 = UExtend v74, 32->64
	v77:i64 = Iadd v76, v75
	v78:i32 = Icmp lt_u, v35, v77
	ExitIfTrue v78, exec_ctx, memory_out_of_bounds
	v79:i64 = Iadd v38, v76
	v80:i32 = Load v79, 0x54
	v81:i64 = Iconst_64 0x64
	v82:i64 = UExtend v74, 32->64
	v83:i64 = Iadd v82, v81
	v84:i32 = Icmp lt_u, v35, v83
	ExitIfTrue v84, exec_ctx, memory_out_of_bounds
	v85:i32 = Load v79, 0x60
	v86:i64 = Iconst_64 0x68
	v87:i64 = UExtend v74, 32->64
	v88:i64 = Iadd v87, v86
	v89:i32 = Icmp lt_u, v35, v88
	ExitIfTrue v89, exec_ctx, memory_out_of_bounds
	v90:i32 = Load v79, 0x64
	v91:i32 = Iadd v85, v90
	v92:i32 = Iconst_32 0x8
	v93:i32 = Ushr v91, v92
	v94:i32 = Iconst_32 0xfffffc
	v95:i32 = Band v93, v94
	v96:i32 = Iadd v80, v95
	v97:i32 = Load v79, 0x58
	v98:i32 = Icmp eq, v80, v97
	Brz v98, blk13
	Jump blk12

blk12: () <-- (blk11)
	v100:i32 = Iconst_32 0x0
	Jump blk14, v100, v32, v96, v48, v332, v374, v1459

blk13: () <-- (blk11)
	v101:i64 = Iconst_64 0x4
	v102:i64 = UExtend v96, 32->64
	v103:i64 = Iadd v102, v101
	v104:i32 = Icmp lt_u, v35, v103
	ExitIfTrue v104, exec_ctx, memory_out_of_bounds
	v105:i64 = Iadd v38, v102
	v106:i32 = Load v105, 0x0
	v107:i32 = Iconst_32 0x3ff
	v108:i32 = Band v91, v107
	v109:i32 = Iconst_32 0x2
	v110:i32 = Ishl v108, v109
	v111:i32 = Iadd v106, v110
	Jump blk14, v111, v32, v96, v48, v332, v374, v1459

blk14: (v99:i32,v119:i32,v120:i32,v132:i32,v331:i32,v373:i32,v1462:i32) <-- (blk12,blk13)
	v112:i64 = Iconst_64 0x34
	v113:i64 = UExtend v32, 32->64
	v114:i64 = Uload32 module_ctx, 0x10
	v115:i64 = Iadd v113, v112
	v116:i32 = Icmp lt_u, v114, v115
	ExitIfTrue v116, exec_ctx, memory_out_of_bounds
	v117:i64 = Load module_ctx, 0x8
	v118:i64 = Iadd v117, v113
	Store v99, v118, 0x30
	v121:i64 = Iconst_64 0x30
	v122:i64 = UExtend v119, 32->64
	v123:i64 = Iadd v122, v121
	v124:i32 = Icmp lt_u, v114, v123
	ExitIfTrue v124, exec_ctx, memory_out_of_bounds
	v125:i64 = Iadd v117, v122
	Store v120, v125, 0x2c
	v126:i32 = Iconst_32 0x90
	v127:i32 = Call f106:sig1, exec_ctx, module_ctx, v126
	v128:i64 = Load module_ctx, 0x8
	v129:i64 = Uload32 module_ctx, 0x10
	v130:i32 = Load module_ctx, 0x4e0
	v131:i32 = Load module_ctx, 0x4f0
	v133:i64 = Iconst_64 0xc
	v134:i64 = UExtend v119, 32->64
	v135:i64 = Iadd v134, v133
	v136:i32 = Icmp lt_u, v129, v135
	ExitIfTrue v136, exec_ctx, memory_out_of_bounds
	v137:i64 = Iadd v128, v134
	v138:i32 = Load v137, 0x8
	v139:i32 = Call f4134:sig4, exec_ctx, module_ctx, v127, v132, v138
	v140:i64 = Load module_ctx, 0x8
	v141:i64 = Uload32 module_ctx, 0x10
	v142:i32 = Load module_ctx, 0x4e0
	v143:i32 = Load module_ctx, 0x4f0
	v144:i64 = Iconst_64 0x14
	v145:i64 = UExtend v119, 32->64
	v146:i64 = Iadd v145, v144
	v147:i32 = Icmp lt_u, v141, v146
	ExitIfTrue v147, exec_ctx, memory_out_of_bounds
	v148:i64 = Iadd v140, v145
	v149:i32 = Load v148, 0x10
	Store v139, v148, 0x10
	Brz v149, blk16
	Jump blk15

blk15: () <-- (blk14)
	v150:i32 = Call f4135:sig1, exec_ctx, module_ctx, v149
	v151:i64 = Load module_ctx, 0x8
	v152:i64 = Uload32 module_ctx, 0x10
	v153:i32 = Load module_ctx, 0x4e0
	v154:i32 = Load module_ctx, 0x4f0
	Call f76:sig0, exec_ctx, module_ctx, v150
	v155:i64 = Load module_ctx, 0x8
	v156:i64 = Uload32 module_ctx, 0x10
	v157:i32 = Load module_ctx, 0x4e0
	v158:i32 = Load module_ctx, 0x4f0
	Jump blk17, v119, v331, v373, v1462

blk16: () <-- (blk14)
	Jump blk17, v119, v331, v373, v1462

blk17: (v159:i32,v330:i32,v372:i32,v1461:i32) <-- (blk15,blk16)
	v160:i64 = Iconst_64 0x10
	v161:i64 = UExtend v159, 32->64
	v162:i64 = Uload32 module_ctx, 0x10
	v163:i64 = Iadd v161, v160
	v164:i32 = Icmp lt_u, v162, v163
	ExitIfTrue v164, exec_ctx, memory_out_of_bounds
	v165:i64 = Load module_ctx, 0x8
	v166:i64 = Iadd v165, v161
	v167:i32 = Load v166, 0xc
	v168:i32 = Iconst_32 0x0
	v169:i32 = Icmp eq, v167, v168
	Brnz v169, blk18, v159, v330, v372, v1461
	Jump blk19

blk18: (v277:i32,v329:i32,v371:i32,v1460:i32) <-- (blk17,blk19,blk23,blk26,blk27)
	v279:i64 = Iconst_64 0x14
	v280:i64 = UExtend v277, 32->64
	v281:i64 = Uload32 module_ctx, 0x10
	v282:i64 = Iadd v280, v279
	v283:i32 = Icmp lt_u, v281, v282
	ExitIfTrue v283, exec_ctx, memory_out_of_bounds
	v284:i64 = Load module_ctx, 0x8
	v285:i64 = Iadd v284, v280
	v286:i32 = Load v285, 0x10
	v287:i32 = Iconst_32 0x7c
	v288:i32 = Iadd v286, v287
	v289:i64 = Iconst_64 0x2c
	v290:i64 = UExtend v277, 32->64
	v291:i64 = Iadd v290, v289
	v292:i32 = Icmp lt_u, v281, v291
	ExitIfTrue v292, exec_ctx, memory_out_of_bounds
	v293:i32 = Load v285, 0x28
	v294:i64 = Iconst_64 0x4
	v295:i64 = UExtend v293, 32->64
	v296:i64 = Iadd v295, v294
	v297:i32 = Icmp lt_u, v281, v296
	ExitIfTrue v297, exec_ctx, memory_out_of_bounds
	v298:i64 = Iadd v284, v295
	v299:i32 = Load v298, 0x0
	v300:i32 = Iconst_32 0x34
	v301:i32 = Iadd v299, v300
	v302:i32 = Call f3131:sig3, exec_ctx, module_ctx, v288, v301
	v303:i64 = Load module_ctx, 0x8
	v304:i64 = Uload32 module_ctx, 0x10
	v305:i32 = Load module_ctx, 0x4e0
	v306:i32 = Load module_ctx, 0x4f0
	v307:i64 = Iconst_64 0x14
	v308:i64 = UExtend v277, 32->64
	v309:i64 = Iadd v308, v307
	v310:i32 = Icmp lt_u, v304, v309
	ExitIfTrue v310, exec_ctx, memory_out_of_bounds
	v311:i64 = Iadd v303, v308
	v312:i32 = Load v311, 0x10
	v313:i32 = Iconst_32 0x0
	v314:i32 = Iconst_32 0x0
	Call f4136:sig6, exec_ctx, module_ctx, v312, v313, v314
	v315:i64 = Load module_ctx, 0x8
	v316:i64 = Uload32 module_ctx, 0x10
	v317:i32 = Load module_ctx, 0x4e0
	v318:i32 = Load module_ctx, 0x4f0
	v319:i64 = Iconst_64 0xc
	v320:i64 = UExtend v277, 32->64
	v321:i64 = Iadd v320, v319
	v322:i32 = Icmp lt_u, v316, v321
	ExitIfTrue v322, exec_ctx, memory_out_of_bounds
	v323:i64 = Iadd v315, v320
	v324:i32 = Load v323, 0x8
	Call f2117:sig0, exec_ctx, module_ctx, v324
	v325:i64 = Load module_ctx, 0x8
	v326:i64 = Uload32 module_ctx, 0x10
	v327:i32 = Load module_ctx, 0x4e0
	v328:i32 = Load module_ctx, 0x4f0
	v334:i32 = Iconst_32 0x18
	v335:i32 = Iadd v329, v334
	v336:i64 = Iconst_64 0x2c
	v337:i64 = UExtend v277, 32->64
	v338:i64 = Iadd v337, v336
	v339:i32 = Icmp lt_u, v326, v338
	ExitIfTrue v339, exec_ctx, memory_out_of_bounds
	v340:i64 = Iadd v325, v337
	v341:i32 = Load v340, 0x28
	v342:i32 = Iconst_32 0x4
	v343:i32 = Iadd v341, v342
	Call f2026:sig2, exec_ctx, module_ctx, v335, v343
	v344:i64 = Load module_ctx, 0x8
	v345:i64 = Uload32 module_ctx, 0x10
	v346:i32 = Load module_ctx, 0x4e0
	v347:i32 = Load module_ctx, 0x4f0
	v348:i32 = Iconst_32 0x30
	v349:i32 = Iadd v329, v348
	v350:i32 = Iconst_32 0x18
	v351:i32 = Iadd v329, v350
	v352:i32 = Iconst_32 0x8
	v353:i32 = Iadd v329, v352
	v354:i64 = Iconst_64 0xc
	v355:i64 = UExtend v277, 32->64
	v356:i64 = Iadd v355, v354
	v357:i32 = Icmp lt_u, v345, v356
	ExitIfTrue v357, exec_ctx, memory_out_of_bounds
	v358:i64 = Iadd v344, v355
	v359:i32 = Load v358, 0x8
	v360:i32 = Iconst_32 0x1c
	v361:i32 = Iadd v359, v360
	v362:i32 = Call f2009:sig3, exec_ctx, module_ctx, v353, v361
	v363:i64 = Load module_ctx, 0x8
	v364:i64 = Uload32 module_ctx, 0x10
	v365:i32 = Load module_ctx, 0x4e0
	v366:i32 = Load module_ctx, 0x4f0
	Call f2032:sig6, exec_ctx, module_ctx, v349, v351, v362
	v367:i64 = Load module_ctx, 0x8
	v368:i64 = Uload32 module_ctx, 0x10
	v369:i32 = Load module_ctx, 0x4e0
	v370:i32 = Load module_ctx, 0x4f0
	v376:i64 = Iconst_64 0x40
	v377:i64 = UExtend v329, 32->64
	v378:i64 = Iadd v377, v376
	v379:i32 = Icmp lt_u, v368, v378
	ExitIfTrue v379, exec_ctx, memory_out_of_bounds
	v380:i64 = Iadd v367, v377
	v381:i64 = Load v380, 0x38
	v382:i64 = Iconst_64 0x10
	v383:i64 = UExtend v371, 32->64
	v384:i64 = Iadd v383, v382
	v385:i32 = Icmp lt_u, v368, v384
	ExitIfTrue v385, exec_ctx, memory_out_of_bounds
	v386:i64 = Iadd v367, v383
	Store v381, v386, 0x8
	v387:i64 = Load v380, 0x30
	Store v387, v386, 0x0
	v388:i64 = Iconst_64 0x2c
	v389:i64 = UExtend v277, 32->64
	v390:i64 = Iadd v389, v388
	v391:i32 = Icmp lt_u, v368, v390
	ExitIfTrue v391, exec_ctx, memory_out_of_bounds
	v392:i64 = Iadd v367, v389
	v393:i32 = Load v392, 0x28
	Jump blk8, v393, v277, v371, v1460, v329

blk19: () <-- (blk17)
	v170:i64 = Iconst_64 0x14
	v171:i64 = UExtend v159, 32->64
	v172:i64 = Iadd v171, v170
	v173:i32 = Icmp lt_u, v162, v172
	ExitIfTrue v173, exec_ctx, memory_out_of_bounds
	v174:i32 = Load v166, 0x10
	v175:i64 = Iconst_64 0x2
	v176:i64 = UExtend v167, 32->64
	v177:i64 = Iadd v176, v175
	v178:i32 = Icmp lt_u, v162, v177
	ExitIfTrue v178, exec_ctx, memory_out_of_bounds
	v179:i64 = Iadd v165, v176
	v180:i32 = Uload16 v179, 0x0
	v181:i64 = Iconst_64 0x2
	v182:i64 = UExtend v174, 32->64
	v183:i64 = Iadd v182, v181
	v184:i32 = Icmp lt_u, v162, v183
	ExitIfTrue v184, exec_ctx, memory_out_of_bounds
	v185:i64 = Iadd v165, v182
	Istore16 v180, v185, 0x0
	v186:i32 = Iconst_32 0x2
	v187:i32 = Iadd v174, v186
	v188:i32 = Iconst_32 0x2
	v189:i32 = Iadd v167, v188
	Call f4087:sig2, exec_ctx, module_ctx, v187, v189
	v190:i64 = Load module_ctx, 0x8
	v191:i64 = Uload32 module_ctx, 0x10
	v192:i32 = Load module_ctx, 0x4e0
	v193:i32 = Load module_ctx, 0x4f0
	v194:i64 = Iconst_64 0x1c
	v195:i64 = UExtend v167, 32->64
	v196:i64 = Iadd v195, v194
	v197:i32 = Icmp lt_u, v191, v196
	ExitIfTrue v197, exec_ctx, memory_out_of_bounds
	v198:i64 = Iadd v190, v195
	v199:i64 = Load v198, 0x14
	v200:i64 = Iconst_64 0x1c
	v201:i64 = UExtend v174, 32->64
	v202:i64 = Iadd v201, v200
	v203:i32 = Icmp lt_u, v191, v202
	ExitIfTrue v203, exec_ctx, memory_out_of_bounds
	v204:i64 = Iadd v190, v201
	Store v199, v204, 0x14
	v205:i64 = Load v198, 0xc
	Store v205, v204, 0xc
	v206:i64 = Iconst_64 0x20
	v207:i64 = UExtend v174, 32->64
	v208:i64 = Iadd v207, v206
	v209:i32 = Icmp lt_u, v191, v208
	ExitIfTrue v209, exec_ctx, memory_out_of_bounds
	v210:i32 = Load v204, 0x1c
	v211:i64 = Iconst_64 0x20
	v212:i64 = UExtend v167, 32->64
	v213:i64 = Iadd v212, v211
	v214:i32 = Icmp lt_u, v191, v213
	ExitIfTrue v214, exec_ctx, memory_out_of_bounds
	v215:i32 = Load v198, 0x1c
	v216:i32 = Icmp eq, v210, v215
	Brnz v216, blk18, v159, v330, v372, v1461
	Jump blk20

blk20: () <-- (blk19)
	Brz v215, blk22
	Jump blk21

blk21: () <-- (blk20)
	v217:i64 = Iconst_64 0x8
	v218:i64 = UExtend v215, 32->64
	v219:i64 = Iadd v218, v217
	v220:i32 = Icmp lt_u, v191, v219
	ExitIfTrue v220, exec_ctx, memory_out_of_bounds
	v221:i64 = Iadd v190, v218
	v222:i32 = Load v221, 0x4
	v223:i32 = Iconst_32 0x1
	v224:i32 = Iadd v222, v223
	Store v224, v221, 0x4
	v225:i32 = Iconst_32 0x0
	v226:i32 = Icmp eq, v224, v225
	Brnz v226, blk1
	Jump blk24

blk22: () <-- (blk20)
	Jump blk23, v174, v215, v210, v159, v330, v372, v1461

blk23: (v228:i32,v229:i32,v237:i32,v278:i32,v333:i32,v375:i32,v1463:i32) <-- (blk24,blk22)
	v230:i64 = Iconst_64 0x20
	v231:i64 = UExtend v228, 32->64
	v232:i64 = Uload32 module_ctx, 0x10
	v233:i64 = Iadd v231, v230
	v234:i32 = Icmp lt_u, v232, v233
	ExitIfTrue v234, exec_ctx, memory_out_of_bounds
	v235:i64 = Load module_ctx, 0x8
	v236:i64 = Iadd v235, v231
	Store v229, v236, 0x1c
	v238:i32 = Iconst_32 0x0
	v239:i32 = Icmp eq, v237, v238
	Brnz v239, blk18, v278, v333, v375, v1463
	Jump blk25

blk24: () <-- (blk21)
	v227:i32 = Load v204, 0x1c
	Jump blk23, v174, v215, v227, v159, v330, v372, v1461

blk25: () <-- (blk23)
	v240:i64 = Iconst_64 0x8
	v241:i64 = UExtend v237, 32->64
	v242:i64 = Iadd v241, v240
	v243:i32 = Icmp lt_u, v232, v242
	ExitIfTrue v243, exec_ctx, memory_out_of_bounds
	v244:i64 = Iadd v235, v241
	v245:i32 = Load v244, 0x4
	v246:i32 = Iconst_32 0x0
	v247:i32 = Icmp eq, v245, v246
	Brnz v247, blk1
	Jump blk26

blk26: () <-- (blk25)
	v248:i32 = Iconst_32 0x1
	v249:i32 = Isub v245, v248
	Store v249, v244, 0x4
	Brnz v249, blk18, v278, v333, v375, v1463
	Jump blk27

blk27: () <-- (blk26)
	v250:i32 = Load v244, 0x0
	v251:i64 = Iconst_64 0x8
	v252:i64 = UExtend v250, 32->64
	v253:i64 = Iadd v252, v251
	v254:i32 = Icmp lt_u, v232, v253
	ExitIfTrue v254, exec_ctx, memory_out_of_bounds
	v255:i64 = Iadd v235, v252
	v256:i32 = Load v255, 0x4
	v257:i64 = Load module_ctx, 0x508
	v258:i32 = Load v257, 0x8
	v259:i32 = Icmp ge_u, v256, v258
	ExitIfTrue v259, exec_ctx, table_out_of_bounds
	v260:i64 = Load v257, 0x0
	v261:i64 = Iconst_64 0x3
	v262:i32 = Ishl v256, v261
	v263:i64 = Iadd v260, v262
	v264:i64 = Load v263, 0x0
	v265:i64 = Iconst_64 0x0
	v266:i32 = Icmp eq, v264, v265
	ExitIfTrue v266, exec_ctx, indirect_call_null_pointer
	v267:i32 = Load v264, 0x10
	v268:i64 = Load module_ctx, 0x500
	v269:i32 = Load v268, 0x0
	v270:i32 = Icmp neq, v267, v269
	ExitIfTrue v270, exec_ctx, indirect_call_type_mismatch
	v271:i64 = Load v264, 0x0
	v272:i64 = Load v264, 0x8
	Store module_ctx, exec_ctx, 0x8
	CallIndirect v271:sig0, exec_ctx, v272, v237
	v273:i64 = Load module_ctx, 0x8
	v274:i64 = Uload32 module_ctx, 0x10
	v275:i32 = Load module_ctx, 0x4e0
	v276:i32 = Load module_ctx, 0x4f0
	Jump blk18, v278, v333, v375, v1463

blk28: (v1430:i32,v1431:i32,v1433:i32,v1437:i32,v1455:i32,v1457:i32,v1474:i32) <-- (blk34,blk36,blk38,blk29)
	v500:i32 = Iconst_32 0x64
	v501:i32 = Iconst_32 0x0
	Jump blk39, v1430, v1431, v1433, v1437, v1455, v501, v1457, v500, v1474

blk29: () <-- (blk33)
	v484:i32 = Iconst_32 0x8
	v485:i32 = Ushr v407, v484
	v486:i32 = Iconst_32 0xfffffc
	v487:i32 = Band v485, v486
	v488:i32 = Iadd v408, v487
	v489:i64 = Iconst_64 0x4
	v490:i64 = UExtend v488, 32->64
	v491:i64 = Iadd v490, v489
	v492:i32 = Icmp lt_u, v396, v491
	ExitIfTrue v492, exec_ctx, memory_out_of_bounds
	v493:i64 = Iadd v399, v490
	v494:i32 = Load v493, 0x0
	v495:i32 = Iconst_32 0x3ff
	v496:i32 = Band v407, v495
	v497:i32 = Iconst_32 0x2
	v498:i32 = Ishl v496, v497
	v499:i32 = Iadd v494, v498
	Jump blk28, v499, v453, v412, v1438, v488, v1458, v1475

blk30: (v455:i32,v458:i32,v1432:i32,v1439:i32,v1464:i32,v1476:i32) <-- (blk31,blk35)
	v456:i32 = Iconst_32 0x4
	v457:i32 = Iadd v455, v456
	v459:i64 = Iconst_64 0x30
	v460:i64 = UExtend v458, 32->64
	v461:i64 = Uload32 module_ctx, 0x10
	v462:i64 = Iadd v460, v459
	v463:i32 = Icmp lt_u, v461, v462
	ExitIfTrue v463, exec_ctx, memory_out_of_bounds
	v464:i64 = Load module_ctx, 0x8
	v465:i64 = Iadd v464, v460
	v466:i32 = Load v465, 0x2c
	v467:i64 = Iconst_64 0x4
	v468:i64 = UExtend v466, 32->64
	v469:i64 = Iadd v468, v467
	v470:i32 = Icmp lt_u, v461, v469
	ExitIfTrue v470, exec_ctx, memory_out_of_bounds
	v471:i64 = Iadd v464, v468
	v472:i32 = Load v471, 0x0
	v473:i32 = Isub v457, v472
	v474:i32 = Iconst_32 0x1000
	v475:i32 = Icmp neq, v473, v474
	Brz v475, blk37
	Jump blk36

blk31: () <-- (blk8)
	v411:i32 = Iconst_32 0x0
	v413:i64 = Iconst_64 0x34
	v414:i64 = UExtend v412, 32->64
	v415:i64 = Iadd v414, v413
	v416:i32 = Icmp lt_u, v396, v415
	ExitIfTrue v416, exec_ctx, memory_out_of_bounds
	v417:i64 = Iadd v399, v414
	v418:i32 = Load v417, 0x30
	Brnz v418, blk30, v418, v412, v411, v1438, v1458, v1475
	Jump blk34

blk32: () <-- (blk8)
	Jump blk33

blk33: () <-- (blk32)
	v425:i64 = Iconst_64 0x34
	v426:i64 = UExtend v412, 32->64
	v427:i64 = Iadd v426, v425
	v428:i32 = Icmp lt_u, v396, v427
	ExitIfTrue v428, exec_ctx, memory_out_of_bounds
	v429:i64 = Iadd v399, v426
	v430:i32 = Load v429, 0x30
	v431:i64 = Iconst_64 0x68
	v432:i64 = UExtend v401, 32->64
	v433:i64 = Iadd v432, v431
	v434:i32 = Icmp lt_u, v396, v433
	ExitIfTrue v434, exec_ctx, memory_out_of_bounds
	v435:i64 = Iadd v399, v432
	v436:i32 = Load v435, 0x64
	v437:i32 = Iadd v436, v407
	v438:i32 = Iconst_32 0x8
	v439:i32 = Ushr v437, v438
	v440:i32 = Iconst_32 0xfffffc
	v441:i32 = Band v439, v440
	v442:i32 = Iadd v408, v441
	v443:i64 = Iconst_64 0x4
	v444:i64 = UExtend v442, 32->64
	v445:i64 = Iadd v444, v443
	v446:i32 = Icmp lt_u, v396, v445
	ExitIfTrue v446, exec_ctx, memory_out_of_bounds
	v447:i64 = Iadd v399, v444
	v448:i32 = Load v447, 0x0
	v449:i32 = Iconst_32 0x3ff
	v450:i32 = Band v437, v449
	v451:i32 = Iconst_32 0x2
	v452:i32 = Ishl v450, v451
	v453:i32 = Iadd v448, v452
	v454:i32 = Icmp eq, v430, v453
	Brnz v454, blk29
	Jump blk35

blk34: () <-- (blk31)
	v419:i32 = Iconst_32 0x8
	v420:i32 = Ushr v407, v419
	v421:i32 = Iconst_32 0xfffffc
	v422:i32 = Band v420, v421
	v423:i32 = Iadd v408, v422
	v424:i32 = Iconst_32 0x0
	Jump blk28, v424, v411, v412, v1438, v423, v1458, v1475

blk35: () <-- (blk33)
	Jump blk30, v430, v412, v453, v1438, v1458, v1475

blk36: () <-- (blk30)
	Jump blk28, v457, v1432, v458, v1439, v466, v1464, v1476

blk37: () <-- (blk30)
	Jump blk38

blk38: () <-- (blk37)
	v476:i32 = Iconst_32 0x4
	v477:i32 = Iadd v466, v476
	v478:i64 = Iconst_64 0x8
	v479:i64 = UExtend v466, 32->64
	v480:i64 = Iadd v479, v478
	v481:i32 = Icmp lt_u, v461, v480
	ExitIfTrue v481, exec_ctx, memory_out_of_bounds
	v482:i64 = Iadd v464, v479
	v483:i32 = Load v482, 0x4
	Jump blk28, v483, v1432, v458, v1439, v477, v1464, v1476

blk39: (v502:i32,v503:i32,v521:i32,v536:i32,v711:i32,v790:i32,v794:i32,v1322:i32,v1473:i32) <-- (blk28,blk119)
	v504:i32 = Icmp neq, v502, v503
	Brz v504, blk44
	Jump blk43

blk40: () <-- (blk120)
	Jump blk5

blk41: (v1372:i32,v1376:i32,v1397:i32,v1412:i32,v1435:i32,v1441:i32,v1466:i32,v1469:i32,v1478:i32) <-- (blk46,blk113,blk108,blk114,blk116)
	v1374:i32 = Iconst_32 0x4
	v1375:i32 = Iadd v1372, v1374
	v1378:i64 = Iconst_64 0x4
	v1379:i64 = UExtend v1376, 32->64
	v1380:i64 = Uload32 module_ctx, 0x10
	v1381:i64 = Iadd v1379, v1378
	v1382:i32 = Icmp lt_u, v1380, v1381
	ExitIfTrue v1382, exec_ctx, memory_out_of_bounds
	v1383:i64 = Load module_ctx, 0x8
	v1384:i64 = Iadd v1383, v1379
	v1385:i32 = Load v1384, 0x0
	v1386:i32 = Isub v1375, v1385
	v1387:i32 = Iconst_32 0x1000
	v1388:i32 = Icmp eq, v1386, v1387
	Brz v1388, blk118
	Jump blk117

blk42: (v870:i32,v886:i32,v1085:i32,v1282:i32,v1299:i32,v1321:i32,v1403:i32,v1418:i32,v1447:i32,v1484:i32) <-- (blk51,blk52,blk59,blk58,blk55)
	v871:i64 = Iconst_64 0x14
	v872:i64 = UExtend v870, 32->64
	v873:i64 = Uload32 module_ctx, 0x10
	v874:i64 = Iadd v872, v871
	v875:i32 = Icmp lt_u, v873, v874
	ExitIfTrue v875, exec_ctx, memory_out_of_bounds
	v876:i64 = Load module_ctx, 0x8
	v877:i64 = Iadd v876, v872
	v878:i32 = Load v877, 0x10
	v879:i64 = Iconst_64 0x2c
	v880:i64 = UExtend v870, 32->64
	v881:i64 = Iadd v880, v879
	v882:i32 = Icmp lt_u, v873, v881
	ExitIfTrue v882, exec_ctx, memory_out_of_bounds
	v883:i32 = Load v877, 0x28
	v884:i32 = Iconst_32 0x4
	v885:i32 = Iadd v883, v884
	v887:i32 = Iconst_32 0x4
	v888:i32 = Iadd v886, v887
	Jump blk78, v878, v1085, v886, v885, v888, v870, v1282, v1299, v1321, v1403, v1418, v1447, v1484

blk43: () <-- (blk39)
	v505:i64 = Iconst_64 0x4
	v506:i64 = UExtend v502, 32->64
	v507:i64 = Uload32 module_ctx, 0x10
	v508:i64 = Iadd v506, v505
	v509:i32 = Icmp lt_u, v507, v508
	ExitIfTrue v509, exec_ctx, memory_out_of_bounds
	v510:i64 = Load module_ctx, 0x8
	v511:i64 = Iadd v510, v506
	v512:i32 = Load v511, 0x0
	v513:i32 = Iconst_32 0x0
	v514:i32 = Icmp eq, v512, v513
	Brnz v514, blk46, v521, v502, v711, v790, v503, v536, v794, v1322, v1473
	Jump blk47

blk44: () <-- (blk39)
	Jump blk45

blk45: () <-- (blk44)
	v733:i64 = Iconst_64 0x2c
	v734:i64 = UExtend v521, 32->64
	v735:i64 = Uload32 module_ctx, 0x10
	v736:i64 = Iadd v734, v733
	v737:i32 = Icmp lt_u, v735, v736
	ExitIfTrue v737, exec_ctx, memory_out_of_bounds
	v738:i64 = Load module_ctx, 0x8
	v739:i64 = Iadd v738, v734
	v740:i32 = Load v739, 0x28
	v741:i64 = Iconst_64 0x4
	v742:i64 = UExtend v740, 32->64
	v743:i64 = Iadd v742, v741
	v744:i32 = Icmp lt_u, v735, v743
	ExitIfTrue v744, exec_ctx, memory_out_of_bounds
	v745:i64 = Iadd v738, v742
	v746:i32 = Load v745, 0x0
	v747:i64 = Iconst_64 0x38
	v748:i64 = UExtend v746, 32->64
	v749:i64 = Iadd v748, v747
	v750:i32 = Icmp lt_u, v735, v749
	ExitIfTrue v750, exec_ctx, memory_out_of_bounds
	v751:i64 = Iadd v738, v748
	v752:i32 = Uload8 v751, 0x37
	v753:i32 = Iconst_32 0x2
	v754:i32 = Icmp eq, v752, v753
	Brz v754, blk64
	Jump blk63

blk46: (v723:i32,v724:i32,v732:i32,v1398:i32,v1413:i32,v1442:i32,v1467:i32,v1470:i32,v1479:i32) <-- (blk43,blk47,blk48,blk49,blk50)
	v725:i64 = Iconst_64 0x34
	v726:i64 = UExtend v723, 32->64
	v727:i64 = Uload32 module_ctx, 0x10
	v728:i64 = Iadd v726, v725
	v729:i32 = Icmp lt_u, v727, v728
	ExitIfTrue v729, exec_ctx, memory_out_of_bounds
	v730:i64 = Load module_ctx, 0x8
	v731:i64 = Iadd v730, v726
	Store v724, v731, 0x30
	Store v732, v731, 0x2c
	Jump blk41, v724, v732, v1398, v1413, v723, v1442, v1467, v1470, v1479

blk47: () <-- (blk43)
	v515:i64 = Iconst_64 0x1c
	v516:i64 = UExtend v512, 32->64
	v517:i64 = Iadd v516, v515
	v518:i32 = Icmp lt_u, v507, v517
	ExitIfTrue v518, exec_ctx, memory_out_of_bounds
	v519:i64 = Iadd v510, v516
	v520:f32 = Load v519, 0x18
	v522:i64 = Iconst_64 0x20
	v523:i64 = UExtend v521, 32->64
	v524:i64 = Iadd v523, v522
	v525:i32 = Icmp lt_u, v507, v524
	ExitIfTrue v525, exec_ctx, memory_out_of_bounds
	v526:i64 = Iadd v510, v523
	v527:f32 = Load v526, 0x1c
	v528:i32 = Fcmp le, v520, v527
	v529:i32 = Iconst_32 0x0
	v530:i32 = Icmp eq, v528, v529
	Brnz v530, blk46, v521, v502, v711, v790, v503, v536, v794, v1322, v1473
	Jump blk48

blk48: () <-- (blk47)
	v531:i64 = Iconst_64 0x24
	v532:i64 = UExtend v512, 32->64
	v533:i64 = Iadd v532, v531
	v534:i32 = Icmp lt_u, v507, v533
	ExitIfTrue v534, exec_ctx, memory_out_of_bounds
	v535:f32 = Load v519, 0x20
	v537:i64 = Iconst_64 0x4
	v538:i64 = UExtend v536, 32->64
	v539:i64 = Iadd v538, v537
	v540:i32 = Icmp lt_u, v507, v539
	ExitIfTrue v540, exec_ctx, memory_out_of_bounds
	v541:i64 = Iadd v510, v538
	v542:f32 = Load v541, 0x0
	v543:i32 = Fcmp ge, v535, v542
	v544:i32 = Iconst_32 0x0
	v545:i32 = Icmp eq, v543, v544
	Brnz v545, blk46, v521, v502, v711, v790, v503, v536, v794, v1322, v1473
	Jump blk49

blk49: () <-- (blk48)
	v546:f32 = Load v519, 0x1c
	v547:i64 = Iconst_64 0x24
	v548:i64 = UExtend v521, 32->64
	v549:i64 = Iadd v548, v547
	v550:i32 = Icmp lt_u, v507, v549
	ExitIfTrue v550, exec_ctx, memory_out_of_bounds
	v551:f32 = Load v526, 0x20
	v552:i32 = Fcmp le, v546, v551
	v553:i32 = Iconst_32 0x0
	v554:i32 = Icmp eq, v552, v553
	Brnz v554, blk46, v521, v502, v711, v790, v503, v536, v794, v1322, v1473
	Jump blk50

blk50: () <-- (blk49)
	v555:i64 = Iconst_64 0x28
	v556:i64 = UExtend v512, 32->64
	v557:i64 = Iadd v556, v555
	v558:i32 = Icmp lt_u, v507, v557
	ExitIfTrue v558, exec_ctx, memory_out_of_bounds
	v559:f32 = Load v519, 0x24
	v560:f32 = Load v526, 0x18
	v561:i32 = Fcmp ge, v559, v560
	v562:i32 = Iconst_32 0x0
	v563:i32 = Icmp eq, v561, v562
	Brnz v563, blk46, v521, v502, v711, v790, v503, v536, v794, v1322, v1473
	Jump blk51

blk51: () <-- (blk50)
	v564:i32 = Load v526, 0xc
	v565:i64 = Iconst_64 0x7
	v566:i64 = UExtend v564, 32->64
	v567:i64 = Iadd v566, v565
	v568:i32 = Icmp lt_u, v507, v567
	ExitIfTrue v568, exec_ctx, memory_out_of_bounds
	v569:i64 = Iadd v510, v566
	v570:i32 = Uload8 v569, 0x6
	v571:i32 = Iconst_32 0x0
	v572:i32 = Icmp eq, v570, v571
	Brnz v572, blk42, v521, v512, v794, v502, v711, v1322, v790, v503, v536, v1473
	Jump blk52

blk52: () <-- (blk51)
	v573:i32 = Load v519, 0x0
	v574:i64 = Iconst_64 0x1c
	v575:i64 = UExtend v573, 32->64
	v576:i64 = Iadd v575, v574
	v577:i32 = Icmp lt_u, v507, v576
	ExitIfTrue v577, exec_ctx, memory_out_of_bounds
	v578:i64 = Iadd v510, v575
	v579:i32 = Load v578, 0x18
	v580:i64 = Load module_ctx, 0x508
	v581:i32 = Load v580, 0x8
	v582:i32 = Icmp ge_u, v579, v581
	ExitIfTrue v582, exec_ctx, table_out_of_bounds
	v583:i64 = Load v580, 0x0
	v584:i64 = Iconst_64 0x3
	v585:i32 = Ishl v579, v584
	v586:i64 = Iadd v583, v585
	v587:i64 = Load v586, 0x0
	v588:i64 = Iconst_64 0x0
	v589:i32 = Icmp eq, v587, v588
	ExitIfTrue v589, exec_ctx, indirect_call_null_pointer
	v590:i32 = Load v587, 0x10
	v591:i64 = Load module_ctx, 0x500
	v592:i32 = Load v591, 0x4
	v593:i32 = Icmp neq, v590, v592
	ExitIfTrue v593, exec_ctx, indirect_call_type_mismatch
	v594:i64 = Load v587, 0x0
	v595:i64 = Load v587, 0x8
	Store module_ctx, exec_ctx, 0x8
	v596:i32 = CallIndirect v594:sig1, exec_ctx, v595, v512
	v597:i64 = Load module_ctx, 0x8
	v598:i64 = Uload32 module_ctx, 0x10
	v599:i32 = Load module_ctx, 0x4e0
	v600:i32 = Load module_ctx, 0x4f0
	v601:i32 = Iconst_32 0x0
	v602:i32 = Icmp eq, v596, v601
	Brnz v602, blk42, v521, v512, v794, v502, v711, v1322, v790, v503, v536, v1473
	Jump blk53

blk53: () <-- (blk52)
	v603:i64 = Iconst_64 0x4
	v604:i64 = UExtend v512, 32->64
	v605:i64 = Iadd v604, v603
	v606:i32 = Icmp lt_u, v598, v605
	ExitIfTrue v606, exec_ctx, memory_out_of_bounds
	v607:i64 = Iadd v597, v604
	v608:i32 = Load v607, 0x0
	v609:i64 = Iconst_64 0x38
	v610:i64 = UExtend v608, 32->64
	v611:i64 = Iadd v610, v609
	v612:i32 = Icmp lt_u, v598, v611
	ExitIfTrue v612, exec_ctx, memory_out_of_bounds
	v613:i64 = Iadd v597, v610
	v614:i32 = Load v613, 0x34
	v615:i64 = Load module_ctx, 0x508
	v616:i32 = Load v615, 0x8
	v617:i32 = Icmp ge_u, v614, v616
	ExitIfTrue v617, exec_ctx, table_out_of_bounds
	v618:i64 = Load v615, 0x0
	v619:i64 = Iconst_64 0x3
	v620:i32 = Ishl v614, v619
	v621:i64 = Iadd v618, v620
	v622:i64 = Load v621, 0x0
	v623:i64 = Iconst_64 0x0
	v624:i32 = Icmp eq, v622, v623
	ExitIfTrue v624, exec_ctx, indirect_call_null_pointer
	v625:i32 = Load v622, 0x10
	v626:i64 = Load module_ctx, 0x500
	v627:i32 = Load v626, 0x4
	v628:i32 = Icmp neq, v625, v627
	ExitIfTrue v628, exec_ctx, indirect_call_type_mismatch
	v629:i64 = Load v622, 0x0
	v630:i64 = Load v622, 0x8
	Store module_ctx, exec_ctx, 0x8
	v631:i32 = CallIndirect v629:sig1, exec_ctx, v630, v512
	v632:i64 = Load module_ctx, 0x8
	v633:i64 = Uload32 module_ctx, 0x10
	v634:i32 = Load module_ctx, 0x4e0
	v635:i32 = Load module_ctx, 0x4f0
	v636:i32 = Call f3754:sig1, exec_ctx, module_ctx, v631
	v637:i64 = Load module_ctx, 0x8
	v638:i64 = Uload32 module_ctx, 0x10
	v639:i32 = Load module_ctx, 0x4e0
	v640:i32 = Load module_ctx, 0x4f0
	v641:i64 = Iconst_64 0x8
	v642:i64 = UExtend v636, 32->64
	v643:i64 = Iadd v642, v641
	v644:i32 = Icmp lt_u, v638, v643
	ExitIfTrue v644, exec_ctx, memory_out_of_bounds
	v645:i64 = Iadd v637, v642
	v646:i32 = Load v645, 0x4
	v647:i32 = Iconst_32 0x0
	v648:i32 = Icmp eq, v646, v647
	Brnz v648, blk1
	Jump blk54

blk54: () <-- (blk53)
	v649:i64 = Iconst_64 0x16
	v650:i64 = UExtend v636, 32->64
	v651:i64 = Iadd v650, v649
	v652:i32 = Icmp lt_u, v638, v651
	ExitIfTrue v652, exec_ctx, memory_out_of_bounds
	v653:i32 = Uload8 v645, 0x15
	v654:i32 = Iconst_32 0x1
	v655:i32 = Isub v646, v654
	Store v655, v645, 0x4
	v656:i32 = Iconst_32 0x0
	v657:i32 = Icmp eq, v655, v656
	Brz v657, blk57
	Jump blk56

blk55: (v688:i32,v705:i32,v710:i32,v713:i32,v1086:i32,v1323:i32,v1419:i32,v1448:i32,v1485:i32) <-- (blk56,blk60)
	v687:i32 = Iconst_32 0x1
	v689:i64 = Iconst_64 0xc
	v690:i64 = UExtend v688, 32->64
	v691:i64 = Uload32 module_ctx, 0x10
	v692:i64 = Iadd v690, v689
	v693:i32 = Icmp lt_u, v691, v692
	ExitIfTrue v693, exec_ctx, memory_out_of_bounds
	v694:i64 = Load module_ctx, 0x8
	v695:i64 = Iadd v694, v690
	v696:i32 = Load v695, 0x8
	v697:i64 = Iconst_64 0x19
	v698:i64 = UExtend v696, 32->64
	v699:i64 = Iadd v698, v697
	v700:i32 = Icmp lt_u, v691, v699
	ExitIfTrue v700, exec_ctx, memory_out_of_bounds
	v701:i64 = Iadd v694, v698
	v702:i32 = Uload8 v701, 0x18
	v703:i32 = Iconst_32 0x0
	v704:i32 = Icmp eq, v702, v703
	Brnz v704, blk42, v688, v713, v1086, v705, v710, v1323, v687, v1419, v1448, v1485
	Jump blk61

blk56: () <-- (blk54)
	v658:i32 = Load v645, 0x0
	v659:i64 = Iconst_64 0x8
	v660:i64 = UExtend v658, 32->64
	v661:i64 = Iadd v660, v659
	v662:i32 = Icmp lt_u, v638, v661
	ExitIfTrue v662, exec_ctx, memory_out_of_bounds
	v663:i64 = Iadd v637, v660
	v664:i32 = Load v663, 0x4
	v665:i64 = Load module_ctx, 0x508
	v666:i32 = Load v665, 0x8
	v667:i32 = Icmp ge_u, v664, v666
	ExitIfTrue v667, exec_ctx, table_out_of_bounds
	v668:i64 = Load v665, 0x0
	v669:i64 = Iconst_64 0x3
	v670:i32 = Ishl v664, v669
	v671:i64 = Iadd v668, v670
	v672:i64 = Load v671, 0x0
	v673:i64 = Iconst_64 0x0
	v674:i32 = Icmp eq, v672, v673
	ExitIfTrue v674, exec_ctx, indirect_call_null_pointer
	v675:i32 = Load v672, 0x10
	v676:i64 = Load module_ctx, 0x500
	v677:i32 = Load v676, 0x0
	v678:i32 = Icmp neq, v675, v677
	ExitIfTrue v678, exec_ctx, indirect_call_type_mismatch
	v679:i64 = Load v672, 0x0
	v680:i64 = Load v672, 0x8
	Store module_ctx, exec_ctx, 0x8
	CallIndirect v679:sig0, exec_ctx, v680, v636
	v681:i64 = Load module_ctx, 0x8
	v682:i64 = Uload32 module_ctx, 0x10
	v683:i32 = Load module_ctx, 0x4e0
	v684:i32 = Load module_ctx, 0x4f0
	Brnz v653, blk55, v521, v502, v711, v512, v794, v1322, v503, v536, v1473
	Jump blk59

blk57: () <-- (blk54)
	Jump blk58

blk58: () <-- (blk57)
	v685:i32 = Iconst_32 0x0
	v686:i32 = Icmp eq, v653, v685
	Brnz v686, blk42, v521, v512, v794, v502, v711, v1322, v790, v503, v536, v1473
	Jump blk60

blk59: () <-- (blk56)
	Jump blk42, v521, v512, v794, v502, v711, v1322, v790, v503, v536, v1473

blk60: () <-- (blk58)
	Jump blk55, v521, v502, v711, v512, v794, v1322, v503, v536, v1473

blk61: () <-- (blk55)
	v706:i64 = Iconst_64 0x34
	v707:i64 = UExtend v688, 32->64
	v708:i64 = Iadd v707, v706
	v709:i32 = Icmp lt_u, v691, v708
	ExitIfTrue v709, exec_ctx, memory_out_of_bounds
	Store v705, v695, 0x30
	Store v710, v695, 0x2c
	v712:i32 = Load v695, 0x10
	v714:i32 = Iconst_32 0x4
	v715:i32 = Iadd v713, v714
	v716:i32 = Load v695, 0x28
	v717:i32 = Iconst_32 0x4
	v718:i32 = Iadd v716, v717
	Call f4138:sig6, exec_ctx, module_ctx, v712, v715, v718
	v719:i64 = Load module_ctx, 0x8
	v720:i64 = Uload32 module_ctx, 0x10
	v721:i32 = Load module_ctx, 0x4e0
	v722:i32 = Load module_ctx, 0x4f0
	Jump blk2, v1485

blk62: (v858:i32,v1471:i32,v1492:i32,v1494:i32) <-- (blk69,blk70,blk73)
	v859:i64 = Iconst_64 0x4
	v860:i64 = UExtend v858, 32->64
	v861:i64 = Uload32 module_ctx, 0x10
	v862:i64 = Iadd v860, v859
	v863:i32 = Icmp lt_u, v861, v862
	ExitIfTrue v863, exec_ctx, memory_out_of_bounds
	v864:i64 = Load module_ctx, 0x8
	v865:i64 = Iadd v864, v860
	v866:i32 = Load v865, 0x0
	v867:i32 = Iconst_32 0x1
	v868:i32 = Icmp eq, v866, v867
	Brnz v868, blk4, v858, v1471, v1492, v1494
	Jump blk74

blk63: () <-- (blk45)
	v755:i32 = Load v739, 0x10
	v756:i32 = Iconst_32 0x0
	Store v756, v739, 0x10
	Brz v755, blk67
	Jump blk66

blk64: () <-- (blk45)
	Jump blk65

blk65: () <-- (blk64)
	v832:i32 = Iconst_32 0x1
	v833:i32 = Band v790, v832
	Brnz v833, blk2, v1473
	Jump blk72

blk66: () <-- (blk63)
	v757:i32 = Call f4135:sig1, exec_ctx, module_ctx, v755
	v758:i64 = Load module_ctx, 0x8
	v759:i64 = Uload32 module_ctx, 0x10
	v760:i32 = Load module_ctx, 0x4e0
	v761:i32 = Load module_ctx, 0x4f0
	Call f76:sig0, exec_ctx, module_ctx, v757
	v762:i64 = Load module_ctx, 0x8
	v763:i64 = Uload32 module_ctx, 0x10
	v764:i32 = Load module_ctx, 0x4e0
	v765:i32 = Load module_ctx, 0x4f0
	Jump blk68, v521, v790, v794, v1473, v536

blk67: () <-- (blk63)
	Jump blk68, v521, v790, v794, v1473, v536

blk68: (v766:i32,v789:i32,v793:i32,v1472:i32,v1493:i32) <-- (blk66,blk67)
	v767:i64 = Iconst_64 0xc
	v768:i64 = UExtend v766, 32->64
	v769:i64 = Uload32 module_ctx, 0x10
	v770:i64 = Iadd v768, v767
	v771:i32 = Icmp lt_u, v769, v770
	ExitIfTrue v771, exec_ctx, memory_out_of_bounds
	v772:i64 = Load module_ctx, 0x8
	v773:i64 = Iadd v772, v768
	v774:i32 = Load v773, 0x8
	v775:i32 = Iconst_32 0x0
	Call f2114:sig2, exec_ctx, module_ctx, v774, v775
	v776:i64 = Load module_ctx, 0x8
	v777:i64 = Uload32 module_ctx, 0x10
	v778:i32 = Load module_ctx, 0x4e0
	v779:i32 = Load module_ctx, 0x4f0
	v780:i32 = Iconst_32 0x0
	v781:i64 = Iconst_64 0x2c
	v782:i64 = UExtend v766, 32->64
	v783:i64 = Iadd v782, v781
	v784:i32 = Icmp lt_u, v777, v783
	ExitIfTrue v784, exec_ctx, memory_out_of_bounds
	v785:i64 = Iadd v776, v782
	Store v780, v785, 0x28
	v786:i32 = Load v785, 0x24
	v787:i32 = Iconst_32 0x1
	v788:i32 = Iadd v786, v787
	Store v788, v785, 0x24
	v791:i32 = Iconst_32 0x1
	v792:i32 = Band v789, v791
	Brnz v792, blk2, v1472
	Jump blk69

blk69: () <-- (blk68)
	v795:i32 = Iconst_32 0x0
	v796:i32 = Icmp eq, v3, v795
	Brnz v796, blk62, v766, v1472, v1493, v793
	Jump blk70

blk70: () <-- (blk69)
	v797:i64 = Iconst_64 0x4
	v798:i64 = UExtend v3, 32->64
	v799:i64 = Iadd v798, v797
	v800:i32 = Icmp lt_u, v777, v799
	ExitIfTrue v800, exec_ctx, memory_out_of_bounds
	v801:i64 = Iadd v776, v798
	v802:i32 = Load v801, 0x0
	v803:i64 = Iconst_64 0xc
	v804:i64 = UExtend v802, 32->64
	v805:i64 = Iadd v804, v803
	v806:i32 = Icmp lt_u, v777, v805
	ExitIfTrue v806, exec_ctx, memory_out_of_bounds
	v807:i64 = Iadd v776, v804
	v808:i32 = Load v807, 0x8
	v809:i64 = Load module_ctx, 0x508
	v810:i32 = Load v809, 0x8
	v811:i32 = Icmp ge_u, v808, v810
	ExitIfTrue v811, exec_ctx, table_out_of_bounds
	v812:i64 = Load v809, 0x0
	v813:i64 = Iconst_64 0x3
	v814:i32 = Ishl v808, v813
	v815:i64 = Iadd v812, v814
	v816:i64 = Load v815, 0x0
	v817:i64 = Iconst_64 0x0
	v818:i32 = Icmp eq, v816, v817
	ExitIfTrue v818, exec_ctx, indirect_call_null_pointer
	v819:i32 = Load v816, 0x10
	v820:i64 = Load module_ctx, 0x500
	v821:i32 = Load v820, 0x4
	v822:i32 = Icmp neq, v819, v821
	ExitIfTrue v822, exec_ctx, indirect_call_type_mismatch
	v823:i64 = Load v816, 0x0
	v824:i64 = Load v816, 0x8
	Store module_ctx, exec_ctx, 0x8
	v825:i32 = CallIndirect v823:sig1, exec_ctx, v824, v3
	v826:i64 = Load module_ctx, 0x8
	v827:i64 = Uload32 module_ctx, 0x10
	v828:i32 = Load module_ctx, 0x4e0
	v829:i32 = Load module_ctx, 0x4f0
	v830:i32 = Iconst_32 0x0
	v831:i32 = Icmp eq, v825, v830
	Brnz v831, blk62, v766, v1472, v1493, v793
	Jump blk71

blk71: () <-- (blk70)
	Jump blk2, v1472

blk72: () <-- (blk65)
	Call f3884:sig2, exec_ctx, module_ctx, v746, v3
	v834:i64 = Load module_ctx, 0x8
	v835:i64 = Uload32 module_ctx, 0x10
	v836:i32 = Load module_ctx, 0x4e0
	v837:i32 = Load module_ctx, 0x4f0
	v838:i64 = Iconst_64 0x2c
	v839:i64 = UExtend v521, 32->64
	v840:i64 = Iadd v839, v838
	v841:i32 = Icmp lt_u, v835, v840
	ExitIfTrue v841, exec_ctx, memory_out_of_bounds
	v842:i64 = Iadd v834, v839
	v843:i32 = Load v842, 0x28
	v844:i64 = Iconst_64 0x4
	v845:i64 = UExtend v843, 32->64
	v846:i64 = Iadd v845, v844
	v847:i32 = Icmp lt_u, v835, v846
	ExitIfTrue v847, exec_ctx, memory_out_of_bounds
	v848:i64 = Iadd v834, v845
	v849:i32 = Load v848, 0x0
	v850:i64 = Iconst_64 0x38
	v851:i64 = UExtend v849, 32->64
	v852:i64 = Iadd v851, v850
	v853:i32 = Icmp lt_u, v835, v852
	ExitIfTrue v853, exec_ctx, memory_out_of_bounds
	v854:i64 = Iadd v834, v851
	v855:i32 = Uload8 v854, 0x37
	v856:i32 = Iconst_32 0x2
	v857:i32 = Icmp neq, v855, v856
	Brnz v857, blk2, v1473
	Jump blk73

blk73: () <-- (blk72)
	Jump blk62, v521, v1473, v536, v794

blk74: () <-- (blk62)
	Jump blk2, v1471

blk75: (v869:i32,v1128:i32,v1170:i32,v1280:i32,v1297:i32,v1307:i32,v1319:i32,v1401:i32,v1416:i32,v1445:i32,v1482:i32) <-- (blk91,blk76)
	Brnz v869, blk2, v1482
	Jump blk103

blk76: (v1127:i32,v1129:i32,v1173:i32,v1284:i32,v1301:i32,v1308:i32,v1325:i32,v1405:i32,v1421:i32,v1450:i32,v1487:i32) <-- (blk80,blk87,blk82,blk89,blk101,blk77)
	Jump blk75, v1127, v1129, v1173, v1284, v1301, v1308, v1325, v1405, v1421, v1450, v1487

blk77: (v1130:i32,v1174:i32,v1285:i32,v1302:i32,v1309:i32,v1326:i32,v1406:i32,v1422:i32,v1451:i32,v1488:i32) <-- (blk84,blk98)
	v1126:i32 = Iconst_32 0x0
	Jump blk76, v1126, v1130, v1174, v1285, v1302, v1309, v1326, v1406, v1422, v1451, v1488

blk78: (v889:i32,v899:i32,v918:i32,v919:i32,v957:i32,v1171:i32,v1281:i32,v1298:i32,v1320:i32,v1402:i32,v1417:i32,v1446:i32,v1483:i32) <-- (blk42,blk96)
	v890:i64 = Iconst_64 0x78
	v891:i64 = UExtend v889, 32->64
	v892:i64 = Uload32 module_ctx, 0x10
	v893:i64 = Iadd v891, v890
	v894:i32 = Icmp lt_u, v892, v893
	ExitIfTrue v894, exec_ctx, memory_out_of_bounds
	v895:i64 = Load module_ctx, 0x8
	v896:i64 = Iadd v895, v891
	v897:i32 = Load v896, 0x74
	Brz v897, blk81
	Jump blk80

blk79: () <-- (blk97)
	v1089:i64 = Iconst_64 0x78
	v1090:i64 = UExtend v1084, 32->64
	v1091:i64 = Iadd v1090, v1089
	v1092:i32 = Icmp lt_u, v1081, v1091
	ExitIfTrue v1092, exec_ctx, memory_out_of_bounds
	v1093:i64 = Iadd v1080, v1090
	v1094:i32 = Load v1093, 0x74
	v1095:i64 = Iconst_64 0x63
	v1096:i64 = UExtend v1094, 32->64
	v1097:i64 = Iadd v1096, v1095
	v1098:i32 = Icmp lt_u, v1081, v1097
	ExitIfTrue v1098, exec_ctx, memory_out_of_bounds
	v1099:i64 = Iadd v1080, v1096
	v1100:i32 = Uload8 v1099, 0x62
	Brz v1100, blk100
	Jump blk99

blk80: () <-- (blk78)
	v898:i32 = Iconst_32 0x1
	v900:i32 = Call f4108:sig3, exec_ctx, module_ctx, v897, v3
	v901:i64 = Load module_ctx, 0x8
	v902:i64 = Uload32 module_ctx, 0x10
	v903:i32 = Load module_ctx, 0x4e0
	v904:i32 = Load module_ctx, 0x4f0
	Brnz v900, blk76, v898, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483
	Jump blk83

blk81: () <-- (blk78)
	Jump blk82

blk82: () <-- (blk81)
	v944:i64 = Iconst_64 0x5c
	v945:i64 = UExtend v889, 32->64
	v946:i64 = Iadd v945, v944
	v947:i32 = Icmp lt_u, v892, v946
	ExitIfTrue v947, exec_ctx, memory_out_of_bounds
	v948:i64 = Iadd v895, v945
	Store v918, v948, 0x58
	v949:i32 = Iconst_32 0x0
	v950:i32 = Call f4091:sig3, exec_ctx, module_ctx, v889, v918
	v951:i64 = Load module_ctx, 0x8
	v952:i64 = Uload32 module_ctx, 0x10
	v953:i32 = Load module_ctx, 0x4e0
	v954:i32 = Load module_ctx, 0x4f0
	v955:i32 = Iconst_32 0x0
	v956:i32 = Icmp eq, v950, v955
	Brnz v956, blk76, v949, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483
	Jump blk89

blk83: () <-- (blk80)
	v905:i64 = Iconst_64 0x78
	v906:i64 = UExtend v889, 32->64
	v907:i64 = Iadd v906, v905
	v908:i32 = Icmp lt_u, v902, v907
	ExitIfTrue v908, exec_ctx, memory_out_of_bounds
	v909:i64 = Iadd v901, v906
	v910:i32 = Load v909, 0x74
	v911:i64 = Iconst_64 0x63
	v912:i64 = UExtend v910, 32->64
	v913:i64 = Iadd v912, v911
	v914:i32 = Icmp lt_u, v902, v913
	ExitIfTrue v914, exec_ctx, memory_out_of_bounds
	v915:i64 = Iadd v901, v912
	v916:i32 = Uload8 v915, 0x62
	Brz v916, blk86
	Jump blk85

blk84: (v934:i32,v1131:i32,v1175:i32,v1286:i32,v1303:i32,v1310:i32,v1327:i32,v1407:i32,v1423:i32,v1452:i32,v1489:i32) <-- (blk85,blk88)
	v935:i32 = Call f4102:sig1, exec_ctx, module_ctx, v934
	v936:i64 = Load module_ctx, 0x8
	v937:i64 = Uload32 module_ctx, 0x10
	v938:i32 = Load module_ctx, 0x4e0
	v939:i32 = Load module_ctx, 0x4f0
	Call f76:sig0, exec_ctx, module_ctx, v935
	v940:i64 = Load module_ctx, 0x8
	v941:i64 = Uload32 module_ctx, 0x10
	v942:i32 = Load module_ctx, 0x4e0
	v943:i32 = Load module_ctx, 0x4f0
	Jump blk77, v1131, v1175, v1286, v1303, v1310, v1327, v1407, v1423, v1452, v1489

blk85: () <-- (blk83)
	v917:i32 = Iconst_32 0x0
	Store v917, v909, 0x74
	Jump blk84, v910, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483

blk86: () <-- (blk83)
	Jump blk87

blk87: () <-- (blk86)
	Call f4144:sig6, exec_ctx, module_ctx, v889, v918, v919
	v920:i64 = Load module_ctx, 0x8
	v921:i64 = Uload32 module_ctx, 0x10
	v922:i32 = Load module_ctx, 0x4e0
	v923:i32 = Load module_ctx, 0x4f0
	v924:i64 = Iconst_64 0x78
	v925:i64 = UExtend v889, 32->64
	v926:i64 = Iadd v925, v924
	v927:i32 = Icmp lt_u, v921, v926
	ExitIfTrue v927, exec_ctx, memory_out_of_bounds
	v928:i64 = Iadd v920, v925
	v929:i32 = Load v928, 0x74
	v930:i32 = Iconst_32 0x0
	v931:i32 = Iconst_32 0x0
	Store v931, v928, 0x74
	v932:i32 = Iconst_32 0x0
	v933:i32 = Icmp eq, v929, v932
	Brnz v933, blk76, v930, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483
	Jump blk88

blk88: () <-- (blk87)
	Jump blk84, v929, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483

blk89: () <-- (blk82)
	Call f4138:sig6, exec_ctx, module_ctx, v889, v957, v919
	v958:i64 = Load module_ctx, 0x8
	v959:i64 = Uload32 module_ctx, 0x10
	v960:i32 = Load module_ctx, 0x4e0
	v961:i32 = Load module_ctx, 0x4f0
	v962:i32 = Call f4139:sig4, exec_ctx, module_ctx, v889, v918, v919
	v963:i64 = Load module_ctx, 0x8
	v964:i64 = Uload32 module_ctx, 0x10
	v965:i32 = Load module_ctx, 0x4e0
	v966:i32 = Load module_ctx, 0x4f0
	Brnz v962, blk76, v949, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483
	Jump blk90

blk90: () <-- (blk89)
	v967:i64 = Iconst_64 0x4
	v968:i64 = UExtend v918, 32->64
	v969:i64 = Iadd v968, v967
	v970:i32 = Icmp lt_u, v964, v969
	ExitIfTrue v970, exec_ctx, memory_out_of_bounds
	v971:i64 = Iadd v963, v968
	v972:i32 = Load v971, 0x0
	v973:i64 = Iconst_64 0x1c
	v974:i64 = UExtend v972, 32->64
	v975:i64 = Iadd v974, v973
	v976:i32 = Icmp lt_u, v964, v975
	ExitIfTrue v976, exec_ctx, memory_out_of_bounds
	v977:i64 = Iadd v963, v974
	v978:i32 = Load v977, 0x18
	v979:i64 = Load module_ctx, 0x508
	v980:i32 = Load v979, 0x8
	v981:i32 = Icmp ge_u, v978, v980
	ExitIfTrue v981, exec_ctx, table_out_of_bounds
	v982:i64 = Load v979, 0x0
	v983:i64 = Iconst_64 0x3
	v984:i32 = Ishl v978, v983
	v985:i64 = Iadd v982, v984
	v986:i64 = Load v985, 0x0
	v987:i64 = Iconst_64 0x0
	v988:i32 = Icmp eq, v986, v987
	ExitIfTrue v988, exec_ctx, indirect_call_null_pointer
	v989:i32 = Load v986, 0x10
	v990:i64 = Load module_ctx, 0x500
	v991:i32 = Load v990, 0x4
	v992:i32 = Icmp neq, v989, v991
	ExitIfTrue v992, exec_ctx, indirect_call_type_mismatch
	v993:i64 = Load v986, 0x0
	v994:i64 = Load v986, 0x8
	Store module_ctx, exec_ctx, 0x8
	v995:i32 = CallIndirect v993:sig1, exec_ctx, v994, v918
	v996:i64 = Load module_ctx, 0x8
	v997:i64 = Uload32 module_ctx, 0x10
	v998:i32 = Load module_ctx, 0x4e0
	v999:i32 = Load module_ctx, 0x4f0
	v1000:i32 = Iconst_32 0x0
	v1001:i32 = Icmp eq, v995, v1000
	Brz v1001, blk92
	Jump blk91

blk91: () <-- (blk90)
	Call f4140:sig6, exec_ctx, module_ctx, v889, v918, v919
	v1002:i64 = Load module_ctx, 0x8
	v1003:i64 = Uload32 module_ctx, 0x10
	v1004:i32 = Load module_ctx, 0x4e0
	v1005:i32 = Load module_ctx, 0x4f0
	v1006:i32 = Iconst_32 0x0
	Jump blk75, v1006, v918, v1171, v1281, v1298, v899, v1320, v1402, v1417, v1446, v1483

blk92: () <-- (blk90)
	Jump blk93

blk93: () <-- (blk92)
	v1007:i32 = Iconst_32 0x64
	v1008:i32 = Call f106:sig1, exec_ctx, module_ctx, v1007
	v1009:i64 = Load module_ctx, 0x8
	v1010:i64 = Uload32 module_ctx, 0x10
	v1011:i32 = Load module_ctx, 0x4e0
	v1012:i32 = Load module_ctx, 0x4f0
	v1013:i32 = Call f4101:sig3, exec_ctx, module_ctx, v1008, v889
	v1014:i64 = Load module_ctx, 0x8
	v1015:i64 = Uload32 module_ctx, 0x10
	v1016:i32 = Load module_ctx, 0x4e0
	v1017:i32 = Load module_ctx, 0x4f0
	v1018:i64 = Iconst_64 0x78
	v1019:i64 = UExtend v889, 32->64
	v1020:i64 = Iadd v1019, v1018
	v1021:i32 = Icmp lt_u, v1015, v1020
	ExitIfTrue v1021, exec_ctx, memory_out_of_bounds
	v1022:i64 = Iadd v1014, v1019
	v1023:i32 = Load v1022, 0x74
	Store v1013, v1022, 0x74
	Brz v1023, blk95
	Jump blk94

blk94: () <-- (blk93)
	v1025:i32 = Call f4102:sig1, exec_ctx, module_ctx, v1023
	v1026:i64 = Load module_ctx, 0x8
	v1027:i64 = Uload32 module_ctx, 0x10
	v1028:i32 = Load module_ctx, 0x4e0
	v1029:i32 = Load module_ctx, 0x4f0
	Call f76:sig0, exec_ctx, module_ctx, v1025
	v1030:i64 = Load module_ctx, 0x8
	v1031:i64 = Uload32 module_ctx, 0x10
	v1032:i32 = Load module_ctx, 0x4e0
	v1033:i32 = Load module_ctx, 0x4f0
	v1034:i64 = Iconst_64 0x78
	v1035:i64 = UExtend v889, 32->64
	v1036:i64 = Iadd v1035, v1034
	v1037:i32 = Icmp lt_u, v1031, v1036
	ExitIfTrue v1037, exec_ctx, memory_out_of_bounds
	v1038:i64 = Iadd v1030, v1035
	v1039:i32 = Load v1038, 0x74
	Jump blk96, v1039, v918, v919, v889, v899, v957, v1171, v1281, v1298, v1320, v1402, v1417, v1446, v1483

blk95: () <-- (blk93)
	Jump blk96, v1013, v918, v919, v889, v899, v957, v1171, v1281, v1298, v1320, v1402, v1417, v1446, v1483

blk96: (v1024:i32,v1040:i32,v1076:i32,v1084:i32,v1087:i32,v1088:i32,v1172:i32,v1283:i32,v1300:i32,v1324:i32,v1404:i32,v1420:i32,v1449:i32,v1486:i32) <-- (blk94,blk95)
	v1041:i64 = Iconst_64 0x4
	v1042:i64 = UExtend v1040, 32->64
	v1043:i64 = Uload32 module_ctx, 0x10
	v1044:i64 = Iadd v1042, v1041
	v1045:i32 = Icmp lt_u, v1043, v1044
	ExitIfTrue v1045, exec_ctx, memory_out_of_bounds
	v1046:i64 = Load module_ctx, 0x8
	v1047:i64 = Iadd v1046, v1042
	v1048:i32 = Load v1047, 0x0
	v1049:i64 = Iconst_64 0x38
	v1050:i64 = UExtend v1048, 32->64
	v1051:i64 = Iadd v1050, v1049
	v1052:i32 = Icmp lt_u, v1043, v1051
	ExitIfTrue v1052, exec_ctx, memory_out_of_bounds
	v1053:i64 = Iadd v1046, v1050
	v1054:i32 = Load v1053, 0x34
	v1055:i64 = Load module_ctx, 0x508
	v1056:i32 = Load v1055, 0x8
	v1057:i32 = Icmp ge_u, v1054, v1056
	ExitIfTrue v1057, exec_ctx, table_out_of_bounds
	v1058:i64 = Load v1055, 0x0
	v1059:i64 = Iconst_64 0x3
	v1060:i32 = Ishl v1054, v1059
	v1061:i64 = Iadd v1058, v1060
	v1062:i64 = Load v1061, 0x0
	v1063:i64 = Iconst_64 0x0
	v1064:i32 = Icmp eq, v1062, v1063
	ExitIfTrue v1064, exec_ctx, indirect_call_null_pointer
	v1065:i32 = Load v1062, 0x10
	v1066:i64 = Load module_ctx, 0x500
	v1067:i32 = Load v1066, 0x4
	v1068:i32 = Icmp neq, v1065, v1067
	ExitIfTrue v1068, exec_ctx, indirect_call_type_mismatch
	v1069:i64 = Load v1062, 0x0
	v1070:i64 = Load v1062, 0x8
	Store module_ctx, exec_ctx, 0x8
	v1071:i32 = CallIndirect v1069:sig1, exec_ctx, v1070, v1040
	v1072:i64 = Load module_ctx, 0x8
	v1073:i64 = Uload32 module_ctx, 0x10
	v1074:i32 = Load module_ctx, 0x4e0
	v1075:i32 = Load module_ctx, 0x4f0
	v1077:i32 = Iconst_32 0x0
	v1078:i32 = Iconst_32 0x0
	v1079:i32 = Call f4107:sig8, exec_ctx, module_ctx, v1024, v1071, v1076, v1077, v1078
	v1080:i64 = Load module_ctx, 0x8
	v1081:i64 = Uload32 module_ctx, 0x10
	v1082:i32 = Load module_ctx, 0x4e0
	v1083:i32 = Load module_ctx, 0x4f0
	Brnz v1079, blk78, v1084, v1087, v1040, v1076, v1088, v1172, v1283, v1300, v1324, v1404, v1420, v1449, v1486
	Jump blk97

blk97: () <-- (blk96)
	Jump blk79

blk98: (v1116:i32,v1132:i32,v1176:i32,v1287:i32,v1304:i32,v1311:i32,v1328:i32,v1408:i32,v1424:i32,v1453:i32,v1490:i32) <-- (blk99,blk102)
	v1117:i32 = Call f4102:sig1, exec_ctx, module_ctx, v1116
	v1118:i64 = Load module_ctx, 0x8
	v1119:i64 = Uload32 module_ctx, 0x10
	v1120:i32 = Load module_ctx, 0x4e0
	v1121:i32 = Load module_ctx, 0x4f0
	Call f76:sig0, exec_ctx, module_ctx, v1117
	v1122:i64 = Load module_ctx, 0x8
	v1123:i64 = Uload32 module_ctx, 0x10
	v1124:i32 = Load module_ctx, 0x4e0
	v1125:i32 = Load module_ctx, 0x4f0
	Jump blk77, v1132, v1176, v1287, v1304, v1311, v1328, v1408, v1424, v1453, v1490

blk99: () <-- (blk79)
	v1101:i32 = Iconst_32 0x0
	Store v1101, v1093, 0x74
	Jump blk98, v1094, v1040, v1172, v1283, v1300, v1087, v1324, v1404, v1420, v1449, v1486

blk100: () <-- (blk79)
	Jump blk101

blk101: () <-- (blk100)
	Call f4144:sig6, exec_ctx, module_ctx, v1084, v1040, v1076
	v1102:i64 = Load module_ctx, 0x8
	v1103:i64 = Uload32 module_ctx, 0x10
	v1104:i32 = Load module_ctx, 0x4e0
	v1105:i32 = Load module_ctx, 0x4f0
	v1106:i64 = Iconst_64 0x78
	v1107:i64 = UExtend v1084, 32->64
	v1108:i64 = Iadd v1107, v1106
	v1109:i32 = Icmp lt_u, v1103, v1108
	ExitIfTrue v1109, exec_ctx, memory_out_of_bounds
	v1110:i64 = Iadd v1102, v1107
	v1111:i32 = Load v1110, 0x74
	v1112:i32 = Iconst_32 0x0
	v1113:i32 = Iconst_32 0x0
	Store v1113, v1110, 0x74
	v1114:i32 = Iconst_32 0x0
	v1115:i32 = Icmp eq, v1111, v1114
	Brnz v1115, blk76, v1112, v1040, v1172, v1283, v1300, v1087, v1324, v1404, v1420, v1449, v1486
	Jump blk102

blk102: () <-- (blk101)
	Jump blk98, v1111, v1040, v1172, v1283, v1300, v1087, v1324, v1404, v1420, v1449, v1486

blk103: () <-- (blk75)
	v1133:i64 = Iconst_64 0x4
	v1134:i64 = UExtend v1128, 32->64
	v1135:i64 = Uload32 module_ctx, 0x10
	v1136:i64 = Iadd v1134, v1133
	v1137:i32 = Icmp lt_u, v1135, v1136
	ExitIfTrue v1137, exec_ctx, memory_out_of_bounds
	v1138:i64 = Load module_ctx, 0x8
	v1139:i64 = Iadd v1138, v1134
	v1140:i32 = Load v1139, 0x0
	v1141:i64 = Iconst_64 0x1c
	v1142:i64 = UExtend v1140, 32->64
	v1143:i64 = Iadd v1142, v1141
	v1144:i32 = Icmp lt_u, v1135, v1143
	ExitIfTrue v1144, exec_ctx, memory_out_of_bounds
	v1145:i64 = Iadd v1138, v1142
	v1146:i32 = Load v1145, 0x18
	v1147:i64 = Load module_ctx, 0x508
	v1148:i32 = Load v1147, 0x8
	v1149:i32 = Icmp ge_u, v1146, v1148
	ExitIfTrue v1149, exec_ctx, table_out_of_bounds
	v1150:i64 = Load v1147, 0x0
	v1151:i64 = Iconst_64 0x3
	v1152:i32 = Ishl v1146, v1151
	v1153:i64 = Iadd v1150, v1152
	v1154:i64 = Load v1153, 0x0
	v1155:i64 = Iconst_64 0x0
	v1156:i32 = Icmp eq, v1154, v1155
	ExitIfTrue v1156, exec_ctx, indirect_call_null_pointer
	v1157:i32 = Load v1154, 0x10
	v1158:i64 = Load module_ctx, 0x500
	v1159:i32 = Load v1158, 0x4
	v1160:i32 = Icmp neq, v1157, v1159
	ExitIfTrue v1160, exec_ctx, indirect_call_type_mismatch
	v1161:i64 = Load v1154, 0x0
	v1162:i64 = Load v1154, 0x8
	Store module_ctx, exec_ctx, 0x8
	v1163:i32 = CallIndirect v1161:sig1, exec_ctx, v1162, v1128
	v1164:i64 = Load module_ctx, 0x8
	v1165:i64 = Uload32 module_ctx, 0x10
	v1166:i32 = Load module_ctx, 0x4e0
	v1167:i32 = Load module_ctx, 0x4f0
	v1168:i32 = Iconst_32 0x0
	v1169:i32 = Icmp eq, v1163, v1168
	Brnz v1169, blk104, v1128, v1170, v1280, v1297, v1307, v1319, v1401, v1416, v1445, v1482
	Jump blk105

blk104: (v1203:i32,v1277:i32,v1279:i32,v1296:i32,v1306:i32,v1318:i32,v1400:i32,v1415:i32,v1444:i32,v1481:i32) <-- (blk103,blk105,blk106)
	v1204:i64 = Iconst_64 0x4
	v1205:i64 = UExtend v1203, 32->64
	v1206:i64 = Uload32 module_ctx, 0x10
	v1207:i64 = Iadd v1205, v1204
	v1208:i32 = Icmp lt_u, v1206, v1207
	ExitIfTrue v1208, exec_ctx, memory_out_of_bounds
	v1209:i64 = Load module_ctx, 0x8
	v1210:i64 = Iadd v1209, v1205
	v1211:i32 = Load v1210, 0x0
	v1212:i64 = Iconst_64 0x24
	v1213:i64 = UExtend v1211, 32->64
	v1214:i64 = Iadd v1213, v1212
	v1215:i32 = Icmp lt_u, v1206, v1214
	ExitIfTrue v1215, exec_ctx, memory_out_of_bounds
	v1216:i64 = Iadd v1209, v1213
	v1217:i32 = Load v1216, 0x20
	v1218:i64 = Load module_ctx, 0x508
	v1219:i32 = Load v1218, 0x8
	v1220:i32 = Icmp ge_u, v1217, v1219
	ExitIfTrue v1220, exec_ctx, table_out_of_bounds
	v1221:i64 = Load v1218, 0x0
	v1222:i64 = Iconst_64 0x3
	v1223:i32 = Ishl v1217, v1222
	v1224:i64 = Iadd v1221, v1223
	v1225:i64 = Load v1224, 0x0
	v1226:i64 = Iconst_64 0x0
	v1227:i32 = Icmp eq, v1225, v1226
	ExitIfTrue v1227, exec_ctx, indirect_call_null_pointer
	v1228:i32 = Load v1225, 0x10
	v1229:i64 = Load module_ctx, 0x500
	v1230:i32 = Load v1229, 0x4
	v1231:i32 = Icmp neq, v1228, v1230
	ExitIfTrue v1231, exec_ctx, indirect_call_type_mismatch
	v1232:i64 = Load v1225, 0x0
	v1233:i64 = Load v1225, 0x8
	Store module_ctx, exec_ctx, 0x8
	v1234:i32 = CallIndirect v1232:sig1, exec_ctx, v1233, v1203
	v1235:i64 = Load module_ctx, 0x8
	v1236:i64 = Uload32 module_ctx, 0x10
	v1237:i32 = Load module_ctx, 0x4e0
	v1238:i32 = Load module_ctx, 0x4f0
	v1239:i32 = Iconst_32 0x0
	v1240:i32 = Icmp eq, v1234, v1239
	Brz v1240, blk110
	Jump blk109

blk105: () <-- (blk103)
	v1177:i64 = Iconst_64 0x14
	v1178:i64 = UExtend v1170, 32->64
	v1179:i64 = Iadd v1178, v1177
	v1180:i32 = Icmp lt_u, v1165, v1179
	ExitIfTrue v1180, exec_ctx, memory_out_of_bounds
	v1181:i64 = Iadd v1164, v1178
	v1182:i32 = Load v1181, 0x10
	v1183:i64 = Iconst_64 0xb
	v1184:i64 = UExtend v1182, 32->64
	v1185:i64 = Iadd v1184, v1183
	v1186:i32 = Icmp lt_u, v1165, v1185
	ExitIfTrue v1186, exec_ctx, memory_out_of_bounds
	v1187:i64 = Iadd v1164, v1184
	v1188:i32 = Uload8 v1187, 0xa
	v1189:i32 = Iconst_32 0x0
	v1190:i32 = Icmp eq, v1188, v1189
	Brnz v1190, blk104, v1128, v1170, v1280, v1297, v1307, v1319, v1401, v1416, v1445, v1482
	Jump blk106

blk106: () <-- (blk105)
	v1191:i32 = Load v1181, 0x4
	v1192:i64 = Iconst_64 0xc
	v1193:i64 = UExtend v1191, 32->64
	v1194:i64 = Iadd v1193, v1192
	v1195:i32 = Icmp lt_u, v1165, v1194
	ExitIfTrue v1195, exec_ctx, memory_out_of_bounds
	v1196:i64 = Iadd v1164, v1193
	v1197:i32 = Load v1196, 0x8
	v1198:i32 = Iconst_32 0x6400000
	Call f3559:sig2, exec_ctx, module_ctx, v1197, v1198
	v1199:i64 = Load module_ctx, 0x8
	v1200:i64 = Uload32 module_ctx, 0x10
	v1201:i32 = Load module_ctx, 0x4e0
	v1202:i32 = Load module_ctx, 0x4f0
	Jump blk104, v1128, v1170, v1280, v1297, v1307, v1319, v1401, v1416, v1445, v1482

blk107: (v1336:i32,v1373:i32,v1377:i32,v1409:i32,v1425:i32,v1436:i32,v1454:i32,v1491:i32) <-- (blk111,blk115)
	v1335:i32 = Iconst_32 0x64
	v1337:i64 = Iconst_64 0x4
	v1338:i64 = UExtend v3, 32->64
	v1339:i64 = Uload32 module_ctx, 0x10
	v1340:i64 = Iadd v1338, v1337
	v1341:i32 = Icmp lt_u, v1339, v1340
	ExitIfTrue v1341, exec_ctx, memory_out_of_bounds
	v1342:i64 = Load module_ctx, 0x8
	v1343:i64 = Iadd v1342, v1338
	v1344:i32 = Load v1343, 0x0
	v1345:i64 = Iconst_64 0xc
	v1346:i64 = UExtend v1344, 32->64
	v1347:i64 = Iadd v1346, v1345
	v1348:i32 = Icmp lt_u, v1339, v1347
	ExitIfTrue v1348, exec_ctx, memory_out_of_bounds
	v1349:i64 = Iadd v1342, v1346
	v1350:i32 = Load v1349, 0x8
	v1351:i64 = Load module_ctx, 0x508
	v1352:i32 = Load v1351, 0x8
	v1353:i32 = Icmp ge_u, v1350, v1352
	ExitIfTrue v1353, exec_ctx, table_out_of_bounds
	v1354:i64 = Load v1351, 0x0
	v1355:i64 = Iconst_64 0x3
	v1356:i32 = Ishl v1350, v1355
	v1357:i64 = Iadd v1354, v1356
	v1358:i64 = Load v1357, 0x0
	v1359:i64 = Iconst_64 0x0
	v1360:i32 = Icmp eq, v1358, v1359
	ExitIfTrue v1360, exec_ctx, indirect_call_null_pointer
	v1361:i32 = Load v1358, 0x10
	v1362:i64 = Load module_ctx, 0x500
	v1363:i32 = Load v1362, 0x4
	v1364:i32 = Icmp neq, v1361, v1363
	ExitIfTrue v1364, exec_ctx, indirect_call_type_mismatch
	v1365:i64 = Load v1358, 0x0
	v1366:i64 = Load v1358, 0x8
	Store module_ctx, exec_ctx, 0x8
	v1367:i32 = CallIndirect v1365:sig1, exec_ctx, v1366, v3
	v1368:i64 = Load module_ctx, 0x8
	v1369:i64 = Uload32 module_ctx, 0x10
	v1370:i32 = Load module_ctx, 0x4e0
	v1371:i32 = Load module_ctx, 0x4f0
	Brnz v1367, blk2, v1491
	Jump blk116

blk108: () <-- (blk109)
	v1313:i64 = Iconst_64 0x34
	v1314:i64 = UExtend v1277, 32->64
	v1315:i64 = Iadd v1314, v1313
	v1316:i32 = Icmp lt_u, v1271, v1315
	ExitIfTrue v1316, exec_ctx, memory_out_of_bounds
	v1317:i64 = Iadd v1270, v1314
	Store v1279, v1317, 0x30
	Store v1296, v1317, 0x2c
	v1329:i32 = Iconst_32 0x1
	v1330:i32 = Isub v1318, v1329
	v1331:i32 = Iconst_32 0x64
	v1332:i32 = Select v1330, v1330, v1331
	Brnz v1330, blk41, v1279, v1296, v1400, v1415, v1277, v1444, v1306, v1332, v1481
	Jump blk114

blk109: () <-- (blk104)
	v1241:i64 = Iconst_64 0x4
	v1242:i64 = UExtend v1203, 32->64
	v1243:i64 = Iadd v1242, v1241
	v1244:i32 = Icmp lt_u, v1236, v1243
	ExitIfTrue v1244, exec_ctx, memory_out_of_bounds
	v1245:i64 = Iadd v1235, v1242
	v1246:i32 = Load v1245, 0x0
	v1247:i64 = Iconst_64 0x20
	v1248:i64 = UExtend v1246, 32->64
	v1249:i64 = Iadd v1248, v1247
	v1250:i32 = Icmp lt_u, v1236, v1249
	ExitIfTrue v1250, exec_ctx, memory_out_of_bounds
	v1251:i64 = Iadd v1235, v1248
	v1252:i32 = Load v1251, 0x1c
	v1253:i64 = Load module_ctx, 0x508
	v1254:i32 = Load v1253, 0x8
	v1255:i32 = Icmp ge_u, v1252, v1254
	ExitIfTrue v1255, exec_ctx, table_out_of_bounds
	v1256:i64 = Load v1253, 0x0
	v1257:i64 = Iconst_64 0x3
	v1258:i32 = Ishl v1252, v1257
	v1259:i64 = Iadd v1256, v1258
	v1260:i64 = Load v1259, 0x0
	v1261:i64 = Iconst_64 0x0
	v1262:i32 = Icmp eq, v1260, v1261
	ExitIfTrue v1262, exec_ctx, indirect_call_null_pointer
	v1263:i32 = Load v1260, 0x10
	v1264:i64 = Load module_ctx, 0x500
	v1265:i32 = Load v1264, 0x4
	v1266:i32 = Icmp neq, v1263, v1265
	ExitIfTrue v1266, exec_ctx, indirect_call_type_mismatch
	v1267:i64 = Load v1260, 0x0
	v1268:i64 = Load v1260, 0x8
	Store module_ctx, exec_ctx, 0x8
	v1269:i32 = CallIndirect v1267:sig1, exec_ctx, v1268, v1203
	v1270:i64 = Load module_ctx, 0x8
	v1271:i64 = Uload32 module_ctx, 0x10
	v1272:i32 = Load module_ctx, 0x4e0
	v1273:i32 = Load module_ctx, 0x4f0
	v1274:i32 = Iconst_32 0x0
	v1275:i32 = Icmp eq, v1269, v1274
	Brnz v1275, blk108
	Jump blk112

blk110: () <-- (blk104)
	Jump blk111, v1277, v1279, v1296, v1306, v1400, v1415, v1444, v1481

blk111: (v1276:i32,v1278:i32,v1295:i32,v1305:i32,v1399:i32,v1414:i32,v1443:i32,v1480:i32) <-- (blk112,blk110)
	v1288:i64 = Iconst_64 0x34
	v1289:i64 = UExtend v1276, 32->64
	v1290:i64 = Uload32 module_ctx, 0x10
	v1291:i64 = Iadd v1289, v1288
	v1292:i32 = Icmp lt_u, v1290, v1291
	ExitIfTrue v1292, exec_ctx, memory_out_of_bounds
	v1293:i64 = Load module_ctx, 0x8
	v1294:i64 = Iadd v1293, v1289
	Store v1278, v1294, 0x30
	Store v1295, v1294, 0x2c
	Brnz v3, blk107, v1305, v1278, v1295, v1399, v1414, v1276, v1443, v1480
	Jump blk113

blk112: () <-- (blk109)
	Jump blk111, v1277, v1279, v1296, v1306, v1400, v1415, v1444, v1481

blk113: () <-- (blk111)
	v1312:i32 = Iconst_32 0x64
	Jump blk41, v1278, v1295, v1399, v1414, v1276, v1443, v1305, v1312, v1480

blk114: () <-- (blk108)
	v1333:i32 = Iconst_32 0x0
	v1334:i32 = Icmp eq, v3, v1333
	Brnz v1334, blk41, v1279, v1296, v1400, v1415, v1277, v1444, v1306, v1332, v1481
	Jump blk115

blk115: () <-- (blk114)
	Jump blk107, v1306, v1279, v1296, v1400, v1415, v1277, v1444, v1481

blk116: () <-- (blk107)
	Jump blk41, v1373, v1377, v1409, v1425, v1436, v1454, v1336, v1335, v1491

blk117: () <-- (blk41)
	v1389:i64 = Iconst_64 0x8
	v1390:i64 = UExtend v1376, 32->64
	v1391:i64 = Iadd v1390, v1389
	v1392:i32 = Icmp lt_u, v1380, v1391
	ExitIfTrue v1392, exec_ctx, memory_out_of_bounds
	v1393:i32 = Load v1384, 0x4
	v1394:i32 = Iconst_32 0x4
	v1395:i32 = Iadd v1376, v1394
	Jump blk119, v1397, v1393, v1412, v1435, v1441, v1395, v1466, v1469, v1478

blk118: () <-- (blk41)
	Jump blk119, v1397, v1375, v1412, v1435, v1441, v1376, v1466, v1469, v1478

blk119: (v1396:i32,v1410:i32,v1411:i32,v1434:i32,v1440:i32,v1456:i32,v1465:i32,v1468:i32,v1477:i32) <-- (blk117,blk118)
	v1426:i32 = Icmp neq, v1410, v1411
	v1427:i32 = Band v1396, v1426
	v1428:i32 = Iconst_32 0x0
	v1429:i32 = Icmp eq, v1427, v1428
	Brnz v1429, blk39, v1410, v1411, v1434, v1440, v1456, v1396, v1465, v1468, v1477
	Jump blk120

blk120: () <-- (blk119)
	Jump blk40